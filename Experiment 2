Number 1
a = input('Enter the value of the first interval: ');
b = input('Enter the value of the second interval: ');
e = input('Enter the value of the error tolerance: ');

fa=exp(-a)-log(a);
fb=exp(-b)-log(b);
fc1=inf;
fc2=inf;
k1=0;
k2=0;
if (fa*fb)<0
    int1=[a,b];
    %Bisection method
    while abs(fc1)>e
        c1=(int1(1)+int1(2))/2;
        fc1=exp(-c1)-log(c1);
        if fc1>0
            int1(1)=c1;
        else
            int1(2)=c1;
        end
        k1=k1+1;
    end
    int2=[a,b];
    %Regula-falsi
    while abs(fc2)>e
        fa1=exp(-int2(1))-log(int2(1));
        fb1=exp(-int2(2))-log(int2(2));
        c2=int2(1)-((fa1*(int2(2)-int2(1)))/(fb1-fa1));
        fc2=exp(-c2)-log(c2);
        if fc2>0
            int2(1)=c2;
        else
            int2(2)=c2;
        k2=k2+1;
        end
    end
    fprintf('Input interval: [%.0f,%.0f] \n', a, b);
    fprintf('Input tolerance: %f \n', e);
    fprintf('The root is %.8f after %.0f iterations using BISECTION METHOD. \n', c1, k1);
    fprintf('The root is %.8f after %.0f iterations using REGULA - FALSI METHOD. \n', c2, k2);
else
    error('Interval Error.')
end


Number 2 : Function
function[r,k]=polybisection2(coef,a, b,epsilon)
fa=polyval(coef,a);
fb=polyval(coef,b);
k1=0;
fc1=inf;
if (fa*fb)<0
    int1=[a,b];
    while abs(fc1)>epsilon
        c1=(int1(1)+int1(2))/2;
        fc1=polyval(coef,c1);
        if fc1>0
            int1(2)=c1;
        else
            int1(1)=c1;
        end
        k1=k1+1;
    end
    c1
    k1
else
    error('Interval Error.')
end

Number 3: Fixed Point
a = input('Enter the value of your initial guess: ');
e = input('Enter the value of the error tolerance: ');

x1 = exp(exp(-a));
fx1 = inf;
k=0;
while abs(fx1)>e
    x1 = exp(exp(-a));
    fx1= exp(-x1)-log(x1);
    a=x1;
    
    k=k+1;
    
end
   
fprintf('Error tolerance: %.4f \n', e);
fprintf('The root is %.8f after %.0f iterations using FIXED POINT ITERATION METHOD. \n', x1, k);
